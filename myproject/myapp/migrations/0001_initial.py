# Generated by Django 5.0.6 on 2024-07-05 10:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking_master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Total_amount', models.BigIntegerField()),
                ('Date', models.DateField(verbose_name='Date')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, verbose_name='Name')),
                ('Price', models.IntegerField(verbose_name='Price')),
                ('Category', models.CharField(max_length=100, verbose_name='Category')),
                ('Quantity', models.CharField(max_length=100, verbose_name='Quantity')),
                ('Status', models.CharField(max_length=100, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_no', models.IntegerField(verbose_name='Chair No.')),
                ('Status', models.CharField(max_length=100, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usertype', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Chef',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, verbose_name='Name')),
                ('Place', models.CharField(max_length=100, verbose_name='Position')),
                ('Contact', models.BigIntegerField(verbose_name='Contact')),
                ('Salary', models.IntegerField(verbose_name='Salary')),
                ('Qualification', models.CharField(max_length=100, verbose_name='Qualification')),
                ('Experiance', models.CharField(max_length=100, verbose_name='Experiance')),
                ('chef_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking_status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.CharField(max_length=100, verbose_name='Status')),
                ('Bm_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.booking_master')),
                ('Chef_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.chef')),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, verbose_name='Name')),
                ('Phone', models.BigIntegerField(verbose_name='Phone')),
                ('Address', models.CharField(max_length=1000, verbose_name='Address')),
                ('customers_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Complaints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Complaint', models.CharField(max_length=500, verbose_name='Complaint')),
                ('Reply', models.CharField(max_length=500, verbose_name='Reply')),
                ('Date', models.DateField(verbose_name='Date')),
                ('Custom_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.customers')),
            ],
        ),
        migrations.AddField(
            model_name='booking_master',
            name='Custm_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.customers'),
        ),
        migrations.CreateModel(
            name='Booking_child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Quantity', models.CharField(max_length=100, verbose_name='Quantity')),
                ('Amount', models.BigIntegerField(verbose_name='Amount')),
                ('Bm_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.booking_master')),
                ('Menu_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.menu')),
            ],
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Amount', models.BigIntegerField(verbose_name='Amount')),
                ('bm_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.booking_master')),
            ],
        ),
        migrations.CreateModel(
            name='Suggestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Suggestion', models.CharField(max_length=500, verbose_name='Suggestion')),
                ('bm_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.booking_master')),
            ],
        ),
        migrations.AddField(
            model_name='booking_master',
            name='table_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.table'),
        ),
    ]
